{"version":3,"sources":["components/common/FormField.js","components/common/Button.js","components/common/Input.js","components/expense/ExpenseForm.js","components/expense/ExpensesTable.js","stores/ExpenseStore.js","dataSource/fetchExpenses.js","stores/ExchangeRateStore.js","components/expense/ExpensesList.js","components/exchangeRate/ExchangeRate.js","App.js","serviceWorker.js","index.js"],"names":["Field","_ref","id","label","input","error","react_default","a","createElement","className","aria-label","htmlFor","Button","text","onClick","type","buttonType","buttonClass","concat","Input","value","onChange","inputClass","ExpenseForm","onSubmit","_useState","useState","_useState2","Object","slicedToArray","expenseTitle","setExpenseTitle","_useState3","_useState4","expenseAmount","setExpenseAmount","_useState5","_useState6","errors","setErrors","event","data","title","amount","validationErrors","length","toString","match","keys","validate","preventDefault","Input_Input","e","target","Button_Button","expenses","expensesList","expenseRemove","currency","sort","setSort","sortAscDesc","setSortAscDesc","sortArrow","sortField","sortButton","dangerouslySetInnerHTML","__html","toggleSort","b","toLowerCase","map","expense","idx","key","toFixed","amountCurrency","ExpenseContext","React","createContext","ExpenseStore","exchangeRates","children","setExpenses","useEffect","useMemo","parseFloat","sumPln","reduce","acc","current","sumCurrency","createExpensesList","Provider","expenseAdd","newList","slice","push","splice","ExchangeRateContext","ExchangeRateStore","EUR","USD","setExchangeRates","setCurrency","setExchangeRate","currencyPair","rate","assign","defineProperty","ExpensesList","Consumer","_ref2","ExpenseForm_ExpenseForm","ExpensesTable_ExpenseForm","ExchangeRate","App","ExchangeRate_ExchangeRate","ExpensesList_ExpensesList","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8c0559c.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Field({ id, label, input, error }) {\n  return (\n    <div className=\"FormField\" aria-label={id}>\n      <label htmlFor={id}>\n        {label}\n      </label>\n      {input(id)}\n      {error && <p className=\"ExpenseForm-error\">{error}</p>}\n    </div>\n  )\n}\n","import React from 'react';\nimport './Button.css';\n\nexport default function Button({ text, onClick, type, className }) {\n  const buttonType = type ? type : 'button';\n  const buttonClass = className ? `${className} Button` : 'Button';\n  return (\n    <button className={buttonClass} onClick={onClick} type={buttonType}>\n      {text}\n    </button>\n  )\n}\n","import React from 'react';\nimport './Input.css';\n\nexport default function Input({ id, type, value, onChange, className }) {\n  const inputClass = className ? `${className} Input` : 'Input';\n  return (\n    <input\n      id={id}\n      className={inputClass}\n      type={type}\n      value={value}\n      onChange={onChange}\n    />\n  )\n}\n","import React, { useState } from 'react';\nimport Field from '../common/FormField';\nimport Button from '../common/Button';\nimport Input from '../common/Input';\nimport './ExpenseForm.css';\n\nexport default function ExpenseForm({ onSubmit }) {\n  const [expenseTitle, setExpenseTitle] = useState('');\n  const [expenseAmount, setExpenseAmount] = useState('');\n  const [errors, setErrors] = useState({});\n\n  function handleSubmit(event) {\n    const data = {\n      title: expenseTitle,\n      amount: expenseAmount\n    };\n    const isValid = validate(data);\n\n    if (isValid) {\n      setExpenseTitle('');\n      setExpenseAmount('');\n      onSubmit(data);\n    }\n\n    event.preventDefault();\n  }\n\n  function validate(data) {\n    const validationErrors = {};\n    if (!data.title || data.title.length < 5) {\n      validationErrors.title = \"Title should have at least 5 characters\";\n    }\n\n    if (!data.amount || !data.amount.toString().match(/^-?\\d{1,6}(\\.\\d{1,2})?$/)) {\n      validationErrors.amount = \"Amount should be proper number in a form: '12.34'\";\n    }\n    setErrors(validationErrors);\n\n    return Object.keys(validationErrors).length === 0;\n  }\n\n  return (\n    <div className=\"ExpenseForm\">\n      <form onSubmit={handleSubmit} className=\"ExpenseForm-form\">\n        <Field\n          id=\"title\"\n          label=\"Title of transaction\"\n          input={(id) => (\n            <Input\n              id={id}\n              type=\"text\"\n              value={expenseTitle}\n              onChange={e => setExpenseTitle(e.target.value)}\n            />\n          )}\n          error={errors.title}\n        />\n        <Field\n          id=\"amount\"\n          label=\"Amount (in PLN)\"\n          input={(id) => (\n            <Input\n              id={id}\n              type=\"text\"\n              value={expenseAmount}\n              onChange={e => setExpenseAmount(e.target.value)}\n            />\n          )}\n          error={errors.amount}\n        />\n        <Button className=\"ExpenseForm-submit\" type=\"submit\" text=\"Add\" />\n      </form>\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport Button from '../common/Button';\nimport './ExpensesTable.css';\n\nexport default function ExpenseForm({ expensesList, expenseRemove, currency }) {\n  const [sort, setSort] = useState();\n  const [sortAscDesc, setSortAscDesc] = useState();\n\n  /**\n   * Toggle between asc and desc sort by given column\n   */\n  function toggleSort(sortField) {\n    setSort(sortField);\n    if (!sortAscDesc)\n      setSortAscDesc(1);\n    else {\n      setSortAscDesc(0);\n    }\n  }\n\n  /**\n   * Sort expenses array\n   */\n  function sortExpenses(expenses) {\n    return expenses.sort((a, b) => {\n      if (sort === 'title') {\n        return sortAscDesc ?\n          a.title.toLowerCase() < b.title.toLowerCase()\n          : a.title.toLowerCase() > b.title.toLowerCase();\n      }\n      if (sort === 'amount') {\n        return sortAscDesc ? a.amount < b.amount : a.amount > b.amount;\n      }\n      return 0;\n    })\n  }\n\n  /**\n   * Get arrow depending on sort order\n   */\n  function sortArrow(sortField) {\n    return sort === sortField ?\n      sortAscDesc ?\n        '&uarr;'\n        : '&darr;'\n      : '&uarr;&darr;';\n  }\n\n  /**\n   * Render sort button\n   */\n  function sortButton(sortField) {\n    return (\n      <button\n        className=\"ExpensesTable-sort\"\n        dangerouslySetInnerHTML={{ __html: sortArrow(sortField) /* o.O */}}\n        onClick={e => toggleSort(sortField)}\n      >\n      </button>\n    )\n  }\n\n  return (\n    <div className=\"ExpensesTable\">\n      <table>\n        <thead>\n          <tr>\n          <td>Title{sortButton('title')}</td>\n          <td className=\"ExpensesTable-price\">Amount (PLN){sortButton('amount')}</td>\n          <td className=\"ExpensesTable-price\">Amount ({currency}){sortButton('amount')}</td>\n          <td className=\"ExpensesTable-actions\">Options</td>\n          </tr>\n        </thead>\n        <tbody>\n          {sortExpenses(expensesList).map((expense, idx) => (\n            <tr key={expense.idx}>\n              <td>{expense.title}</td>\n              <td className=\"ExpensesTable-price\">{expense.amount.toFixed(2)}</td>\n              <td className=\"ExpensesTable-price\">{expense.amountCurrency.toFixed(2)}</td>\n              <td className=\"ExpensesTable-actions\">\n                <Button text=\"Delete\" onClick={e => { expenseRemove(expense.idx) }}/>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport fetchExpenses from '../dataSource/fetchExpenses';\n\nexport const ExpenseContext = React.createContext();\n\n/**\n * Create expenses computed state (sums, amounts converted to other currencies)\n * from minimal expenses data\n */\nfunction createExpensesList(expenses, exchangeRates, currency) {\n  const expensesList = expenses.map((expense, idx) => ({\n    // a little trick, normally we have some id from storage, but\n    // not in this example, so let's just use item order from original array\n    idx,\n    title: expense.title,\n    amount: parseFloat(expense.amount),\n    amountCurrency: parseFloat(expense.amount) / exchangeRates[currency],\n  }));\n\n  return {\n    expenses: expensesList,\n    sumPln: expensesList.reduce((acc, current) => (acc + current.amount), 0.0),\n    sumCurrency: expensesList.reduce((acc, current) => (acc + current.amountCurrency), 0.0)\n  }\n}\n\nexport default function ExpenseStore({ exchangeRates, currency, children }) {\n  const [expenses, setExpenses] = useState([]);\n\n  // No need to use effect here but normally fetching data from external source\n  // shpuld be defined as effect\n  useEffect(() => {\n    setExpenses(fetchExpenses());\n  }, []);\n\n  // memoize the computed state\n  const expensesList = useMemo(\n    () => (createExpensesList(expenses, exchangeRates, currency)),\n    [expenses, exchangeRates, currency]\n  );\n\n  // remove action\n  function expenseRemove(idx) {\n    const newList = expenses.slice();\n    newList.splice(idx, 1);\n    setExpenses(newList);\n  }\n\n  // add action\n  function expenseAdd(expense) {\n    const newList = expenses.slice();\n    newList.push(expense);\n    setExpenses(newList);\n  }\n\n  return (\n    <ExpenseContext.Provider value={{ expensesList, expenseAdd, expenseRemove }}>\n      {children}\n    </ExpenseContext.Provider>\n  );\n}\n","/**\n * This function should fetch data from the storage but\n * here just goes some example data\n */\nexport default function fetchExpenses() {\n  return [\n    {\n      title: \"New book in Rust\",\n      amount: 100.0\n    },\n    {\n      title: \"Snacks for a football match\",\n      amount: 20\n    },\n    {\n      title: \"Bus ticket\",\n      amount: 2.55\n    },\n    {\n      title: \"Steak\",\n      amount: 99.99\n    }\n  ];\n}\n","import React, { useState } from 'react';\n\nexport const ExchangeRateContext = React.createContext();\n\nexport default function ExchangeRateStore({ children }) {\n  // hardcoded initial state, normally should be fetched from storage\n  const [exchangeRates, setExchangeRates] = useState({\n    EUR: 4.382,\n    USD: 3.771\n  });\n\n  const [currency, setCurrency] = useState('EUR');\n\n  // set exchange rate action\n  function setExchangeRate(currencyPair, rate) {\n    setExchangeRates(Object.assign({}, exchangeRates, {\n      [currencyPair]: rate,\n    }));\n  }\n\n  return (\n    <ExchangeRateContext.Provider value={{ exchangeRates, setExchangeRate, currency, setCurrency }}>\n     {children}\n    </ExchangeRateContext.Provider>\n  );\n}\n","import React from 'react';\nimport ExpenseForm from './ExpenseForm';\nimport ExpensesTable from './ExpensesTable';\nimport { ExpenseContext } from '../../stores/ExpenseStore';\nimport { ExchangeRateContext } from '../../stores/ExchangeRateStore';\nimport './ExpensesList.css';\n\nexport default function ExpensesList() {\n  return (\n    <ExchangeRateContext.Consumer>\n      {({ currency }) => (\n        <ExpenseContext.Consumer>\n          {({ expensesList, expenseAdd, expenseRemove }) => (\n            <div className=\"ExpensesList\">\n              <ExpenseForm onSubmit={expenseAdd} />\n              <ExpensesTable\n                expensesList={expensesList.expenses}\n                expenseRemove={expenseRemove}\n                currency={currency}\n              />\n              <div className=\"ExpensesList-sum\">\n                Sum: {expensesList.sumPln.toFixed(2)} PLN\n                ({expensesList.sumCurrency.toFixed(2)} {currency})\n              </div>\n            </div>\n          )}\n        </ExpenseContext.Consumer>\n      )}\n    </ExchangeRateContext.Consumer>\n  )\n}\n","import React from 'react';\nimport { ExchangeRateContext } from '../../stores/ExchangeRateStore';\nimport Input from '../common/Input';\nimport './ExchangeRate.css';\n\nexport default function ExchangeRate() {\n  return (\n    <ExchangeRateContext.Consumer>\n      {({ exchangeRates, setExchangeRate, currency, setCurrency }) => (\n        <div className=\"ExchangeRate\">\n          1\n          <select value={currency} onChange={e => setCurrency(e.target.value)}>\n            {Object.keys(exchangeRates).map(currency => (\n              <option key={currency} value={currency}>{currency}</option>\n            ))}\n          </select>\n          =\n          <Input\n            type=\"text\"\n            value={exchangeRates[currency]}\n            onChange={e => setExchangeRate(currency, e.target.value)}\n          />\n          PLN\n        </div>\n      )}\n    </ExchangeRateContext.Consumer>\n  )\n}\n","import React, { Component } from 'react';\nimport ExpensesList from './components/expense/ExpensesList';\nimport ExchangeRate from './components/exchangeRate/ExchangeRate';\nimport ExpenseStore from './stores/ExpenseStore';\nimport ExchangeRateStore from './stores/ExchangeRateStore';\nimport { ExchangeRateContext } from './stores/ExchangeRateStore';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <ExchangeRateStore>\n        <ExchangeRateContext.Consumer>\n          {({ exchangeRates, currency }) => (\n            <ExpenseStore exchangeRates={exchangeRates} currency={currency}>\n              <div className=\"App\">\n                <header className=\"App-header\">\n                  <div className=\"App-header-content\">\n                    <h1>List of expenses</h1>\n                      <ExchangeRate />\n                  </div>\n                </header>\n                <div id=\"App-content\">\n                    <ExpensesList />\n                </div>\n              </div>\n            </ExpenseStore>\n          )}\n        </ExchangeRateContext.Consumer>\n      </ExchangeRateStore>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}